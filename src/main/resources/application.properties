server.port=8081
#注册到Eureka的服务名称
#Spring cloud config也是通过这个name来进行查找的
spring.application.name=organizationservice
spring.profiles.active=default
#这个配置不知道干什么用的
spring.cloud.config.enabled=true
#注册ip而非服务器名称
##原因：Eureka注册服务时，会将主机名称和外界联系，这会让服务分配一个支持
##DNS的主机名。但是在使用docker部署的时候，启动会随机申城主机名，并且该容器
##没有DNS记录，所以推荐在容器环境或者主机环境下都使用prefer-ip
eureka.instance.prefer-ip-address=true
#通知该服务通过Eureka注册
eureka.client.register-with-eureka=true
#告诉Eureka发送本地缓存注册表，并非每一次调用都通过Eureka
eureka.client.fetch-registry=true
#本服务要解析的Eureka服务的位置，这里可以配置多个Eureka Server，用逗号分隔
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
#Spring cloud配置服务器的位置
spring.cloud.config.uri=http://localhost:8888
#debug信息
logging.level.com.lin=debug

